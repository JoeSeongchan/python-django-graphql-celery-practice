'''
이터레이터 : 값을 차례대로 꺼낼 수 있는 객체
for i in range(100) => 0부터 99까지 값을 차례대로 꺼낼 수 있는
이터레이터를 만든다.
연속된 숫자를 미리 만들면 숫자가 아주 많을 때는 메모리를 많이 사용하게 된다.
성능 면에서 불리하다.
파이썬에서는 이터레이터만 생성하고 값이 필요한 시점이 되었을 때 값을 만든다.
이런 방식을 지연 평가 (lazy evaluation) 이라고 한다.

이터레이터 = 반복자

반복 가능한 객체
    문자열, 리스트, 딕셔너리, 세트
    요소가 여러 개 들어 있고, 한 번에 하나씩 꺼낼 수 있는 객체
반복 가능한 객체인지 확인하려면 dir(객체)로 객체 안에 든
    함수를 모두 출력하고, 그 안에 __iter__가 있는지 확인하면
    된다. 있으면 반복 가능한 객체이다.
__iter__() 메서드로 이터레이터를 뽑아낸 후, 이 이터레이터의
__next__() 메서드를 호출하여 요소를 하나씩 꺼낼 수 있다.
끝에 다다르면 StopIteration 예외가 발생한다.

it = range(100).__iter__() 이렇게 이터레이터를 뽑아낼 수 있다.

__iter__, __next__를 모두 가진 객체는 이터레이터 프로토콜을 지원한다고 말한다.
반복 가능한 객체와 이터레이터는 별개의 객체이다!

반복 가능한 객체와 시퀀스 객체는 다른 개념이다.
시퀀스 객체는 요소의 순서가 정해져 있고 연속적으로 이어져 있어야 한다.
    맵이나 세트는 시퀀스 객체가 아니다.



'''